$schema: https://azuremlschemas.azureedge.net/latest/pipelineJob.schema.json
type: pipeline
display_name: amlv2_parallel_job
compute: azureml:cpu-cluster
settings:
  force_rerun: false

jobs:

  data_engineering:
    type: command
    code: data-engineering
    command: >-
      rm -rf ${{outputs.training_data_folder}};
      python data-engineering.py --raw_data_file ${{inputs.raw_data_file}} --training_data_folder ${{outputs.training_data_folder}};
    inputs:
      raw_data_file:
        type: uri_file
        mode: ro_mount
        path: azureml://datastores/datalake/paths/amlv2_pj_raw_data/raw_data.csv
    outputs:
      training_data_folder:
        type: mltable
        mode: rw_mount
        path: azureml://datastores/datalake/paths/amlv2_pj_training_data
    environment: azureml:amlv2-pj-data-engineering@latest

  training:
    type: parallel
    mini_batch_size: "1"
    mini_batch_error_threshold: -1
    max_concurrency_per_instance: 2
    retry_settings:
      max_retries: 1
      timeout: 60
    resources:
      instance_count: 2
    environment_variables:
      env_var_1: "ENV_VAR_1_VALUE"
    inputs:
      training_data_folder:
        type: mltable
        mode: eval_mount
        path: ${{parent.jobs.data_engineering.outputs.training_data_folder}}
    outputs:
      predictions_data_folder:
        type: uri_folder
        mode: rw_mount
        path: azureml://datastores/datalake/paths/amlv2_pj_predictions_data
      training_log:
        type: uri_file
        mode: rw_mount
        path: azureml://datastores/datalake/paths/amlv2_pj_training_log/training_log.txt
    input_data: ${{inputs.training_data_folder}}
    task:
      type: function
      code: training
      entry_script: training.py
      environment: azureml:amlv2-pj-training@latest
      args: --param_1 "PARAM_1_VALUE" --predictions_data_folder ${{outputs.predictions_data_folder}}
      append_row_to: ${{outputs.training_log}}

  generate_predictions_mltable:
    type: command
    command: >-
      cd ${{outputs.predictions_mltable}};
      echo "paths:" > MLTable;
      for f in *.csv ; do echo "  - file: $f" >> MLTable ; done;
      echo "transformations:" >> MLTable;
      echo " - read_delimited:" >> MLTable;
      echo " "" "" "" """ "delimiter: ','" >> MLTable;
      echo " "" "" "" """ "encoding: 'ascii'" >> MLTable;
      echo " "" "" "" """ "header: all_files_same_headers" >> MLTable;
    inputs:
      predictions_data_folder:
        type: uri_folder
        mode: ro_mount
        path: ${{parent.jobs.training.outputs.predictions_data_folder}}
    outputs:
      predictions_mltable:
        type: mltable
        mode: rw_mount
        path: azureml://datastores/datalake/paths/amlv2_pj_predictions_data
    environment: azureml:AzureML-minimal-ubuntu18.04-py37-cpu-inference@latest

  evaluation:
    type: command
    code: evaluation
    command: python evaluation.py --predictions_mltable ${{inputs.predictions_mltable}};
    inputs:
      predictions_mltable:
        type: mltable
        mode: direct
        path: ${{parent.jobs.generate_predictions_mltable.outputs.predictions_mltable}}
    environment: azureml:amlv2-pj-evaluation@latest